import os
import shutil

# Flags
equilFlag=0
coolFlag=0
quenchFlag=1

# Parameters
nSamples=100
nTrajectories=10
nEquil=1000000
nCool=35000000
T_i=3500
T_f=0.01
T_search=600
cutoff=2.75

# Writes LAMMPS scripts
def writeEquilibrate(nEquil,T_i,seed):
    with open('in.equilibrate.lmp','w') as f:
        f.write('# 3d amorphous silicon (equilibrate)\n')
        f.write('# T_i = '+str(T_i)+'\n')
        f.write('# nEquil = '+str(nEquil)+'\n')
        f.write('# seed = '+str(seed)+'\n')
        f.write('\n')
        f.write('variable T_i equal '+str(T_i)+'\n')
        f.write('variable T_damp equal 100\n')
        f.write('variable nEquil equal '+str(nEquil)+'\n')
        f.write('variable nRDF equal 1000\n')
        f.write('variable nMSD equal 1000\n')
        f.write('variable nThermo equal 1000\n')
        f.write('variable rdfBins equal 100\n')
        f.write('\n')
        f.write('log log.equil.lmp\n')
        f.write('\n')
        f.write('dimension 3\n')
        f.write('units metal\n')
        f.write('boundary p p p\n')
        f.write('atom_style atomic\n')
        f.write('atom_modify map array sort 0 0.0\n')
        f.write('\n')
        f.write('lattice diamond 5.465517665\n')
        f.write('region box block 0 5 0 5 0 5 units lattice\n')
        f.write('create_box 1 box\n')
        f.write('create_atoms 1 box\n')
        f.write('mass 1 28.0855\n')
        f.write('\n')
        f.write('velocity all create ${T} '+str(seed)+'\n')
        f.write('\n')
        f.write('pair_style tersoff\n')
        f.write('pair_coeff * * Si.tersoff Si\n')
        f.write('\n')
        f.write('neighbor 2.0 bin\n')
        f.write('neigh_modify every 1 delay 0 check no\n')
        f.write('\n')
        f.write('dump data all custom 1000 equil_pos.lammps id type x y z vx vy vz\n')
        f.write('\n')
        f.write('thermo ${nThermo}\n')
        f.write('thermo_style custom step temp epair emol pe ke etotal press vol\n')
        f.write('\n')
        f.write('comm_modify cutoff 20\n')
        f.write('compute RDF all rdf ${rdfBins} cutoff 10\n')
        f.write('compute MSD all msd\n')
        f.write('variable volume equal vol\n')
        f.write('fix 1 all ave/time ${nThermo} 1 ${nThermo} c_thermo_temp c_thermo_pe c_thermo_press v_volume file equil_thermo.txt\n')
        f.write('fix 2 all ave/time ${nRDF} 1 ${nRDF} c_RDF[*] file equil_rdf.txt mode vector\n')
        f.write('fix 3 all ave/time ${nMSD} 1 ${nMSD} c_MSD[*] file equil_msd.txt\n')
        f.write('fix equil all nvt temp ${T} ${T} ${T_damp}\n')
        f.write('run ${nEquil}\n')
        f.write('\n')
        f.write('unfix 1\n')
        f.write('unfix 2\n')
        f.write('unfix 3\n')
        f.write('unfix equil\n')
        f.write('\n')
        f.write('write_restart restart.equil')

def writeCool(nCool,T_i,T_f):
    with open('in.cool.lmp','w') as f:
        f.write('# 3d amorphous silicon (cool)\n')
        f.write('# T_i = '+str(T_i)+'\n')
        f.write('# T_f = '+str(T_f)+'\n')
        f.write('# n = '+str(nCool)+'\n')
        f.write('\n')
        f.write('variable T_i equal '+str(T_i)+'\n')
        f.write('variable T_f equal '+str(T_f)+'\n')
        f.write('variable T_damp equal 100\n')
        f.write('variable nCool equal '+str(nCool)+'\n')
        f.write('variable nRDF equal 1000\n')
        f.write('variable nThermo equal 1000\n')
        f.write('variable rdfBins equal 100\n')
        f.write('\n')
        f.write('log log.cool.lmp\n')
        f.write('\n')
        f.write('dimension 3\n')
        f.write('units metal\n')
        f.write('boundary p p p\n')
        f.write('atom_style atomic\n')
        f.write('atom_modify map array sort 0 0.0\n')
        f.write('\n')
        f.write('lattice diamond 5.465517665\n')
        f.write('region box block 0 5 0 5 0 5 units lattice\n')
        f.write('\n')
        f.write('read_restart restart.equil\n')
        f.write('\n')
        f.write('pair_style tersoff\n')
        f.write('pair_coeff * * Si.tersoff Si\n')
        f.write('\n')
        f.write('neighbor 2.0 bin\n')
        f.write('neigh_modify every 1 delay 0 check no\n')
        f.write('\n')
        f.write('dump data all custom 1000 cool_pos.lammps id type x y z vx vy vz\n')
        f.write('\n')
        f.write('thermo ${nThermo}\n')
        f.write('thermo_style custom step temp epair emol pe ke etotal press vol\n')
        f.write('\n')
        f.write('comm_modify cutoff 20\n')
        f.write('compute RDF all rdf ${rdfBins} cutoff 10\n')
        f.write('variable volume equal vol\n')
        f.write('fix 1 all ave/time ${nThermo} 1 ${nThermo} c_thermo_temp c_thermo_pe c_thermo_press v_volume file cool_thermo.txt\n')
        f.write('fix 2 all ave/time ${nRDF} 1 ${nRDF} c_RDF[*] file cool_rdf.txt mode vector\n')
        f.write('fix cool all nvt temp ${T_i} ${T_f} ${T_damp}\n')
        f.write('run ${nCool}\n')
        f.write('\n')
        f.write('unfix 1\n')
        f.write('unfix 2\n')
        f.write('unfix cool\n')
        f.write('\n')
        f.write('write_restart restart.cool')

def writeQuench(nEquil,nCool,T_search,seed,cutoff):
    with open('in.quench.lmp','w') as f:
        f.write('# 3d amorphous siicon (quench)\n')
        f.write('# nEquil = '+str(nEquil)+'\n')
        f.write('# nCool = '+str(nCool)+'\n')
        f.write('# T_search = '+str(T_search)+'\n')
        f.write('# seed = '+str(seed)+'\n')
        f.write('# cutoff = '+str(cutoff)+'\n')
        f.write('\n')
        f.write('variable nEquil equal '+str(nEquil)+'\n')
        f.write('variable nCool equal '+str(nCool)+'\n')
        f.write('variable nSearch equal 10\n')
        f.write('variable nQuench equal 10000\n')
        f.write('variable nThermo equal 50\n')
        f.write('variable T_search equal '+str(T_search)+'\n')
        f.write('variable T_damp equal 100\n')
        f.write('variable E_tol equal 0.0\n')
        f.write('variable F_tol equal 1.0e-6\n')
        f.write('\n')
        f.write('log log.quench.lmp\n')
        f.write('\n')
        f.write('dimension 3\n')
        f.write('units metal\n')
        f.write('boundary p p p\n')
        f.write('atom_style atomic\n')
        f.write('atom_modify map array sort 0 0.0\n')
        f.write('\n')
        f.write('lattice diamond 5.465517665\n')
        f.write('region box block 0 5 0 5 0 5 units lattice\n')
        f.write('\n')
        f.write('read_restart restart.cool\n')
        f.write('\n')
        f.write('velocity all create ${T_search} '+str(seed)+'\n')
        f.write('\n')
        f.write('pair_style tersoff\n')
        f.write('pair_coeff * * Si.tersoff Si\n')
        f.write('\n')
        f.write('neighbor 2.0 bin\n')
        f.write('neigh_modify every 1 delay 0 check no\n')
        f.write('\n')
        f.write('compute coord all coord/atom cutoff '+str(cutoff)+'\n')
        f.write('variable coord1 equal c_coord[1]\n')
        f.write('\n')
        f.write('thermo ${nThermo}\n')
        f.write('thermo_style custom step temp epair emol etotal press pe v_coord1\n')
        f.write('\n')
        f.write('write_dump all custom temp.pos id type xu yu zu vx vy vz\n')
        f.write('minimize ${E_tol} ${F_tol} ${nQuench} ${nQuench}\n')
        f.write('write_dump all custom quench_coord.lammps id type c_coord modify sort id\n')
        f.write('write_dump all custom quench_pos.lammps id type x y z xu yu zu modify sort id\n')
        f.write('print $(pe) file quench_energies.lammps\n')
        f.write('\n')
        f.write('fix search all nvt temp ${T_search} ${T_search} ${T_damp}\n')
        f.write('label loop_i\n')
        f.write('variable i loop 2000\n')
        f.write('\t'+'variable current_time equal ${nEquil}+${nCool}+($i-1)*${nSearch}\n')
        f.write('\t'+'read_dump temp.pos ${current_time} x y z vx vy vz wrapped no\n')
        f.write('\t'+'run ${nSearch}\n')
        f.write('\t'+'write_dump all custom temp.pos id type xu yu zu vx vy vz\n')
        f.write('\n')
        f.write('\t'+'minimize ${E_tol} ${F_tol} ${nQuench} ${nQuench}\n')
        f.write('\t'+'write_dump all custom quench_coord.lammps id type c_coord modify sort id append yes\n')
        f.write('\t'+'write_dump all custom quench_pos.lammps id type x y z xu yu zu modify sort id append yes\n')
        f.write('\t'+'print $(pe) append quench_energies.lammps\n')
        f.write('next i\n')
        f.write('jump SELF loop_i\n')
        f.write('\n')
        f.write('unfix search')

if equilFlag:
    for i in range(1,nSamples+1):
        folder='Equil%03d' % (i)
        if not os.path.isdir(folder):
            os.mkdir(folder)
        os.chdir(folder)
        os.mkdir('Equil')
        os.chdir('Equil')
        writeEquilibrate(nEquil,T_i,i)
        os.chdir('../../')
        shutil.copy('Si.tersoff',folder+'/Equil/')

if coolFlag:
    for i in range(1,nSamples+1):
        folder='Equil%03d' % (i)
        os.chdir(folder)
        if not os.path.isdir('Cool'):
            os.mkdir('Cool')
        os.chdir('Cool')
        writeCool(nCool,T_i,T_f)
        os.chdir('../Equil/')
        shutil.copy('restart.equil','../Cool/')
        os.chdir('../../')
        shutil.copy('Si.tersoff',folder+'/Cool/')

if quenchFlag:
    for i in range(1,nSamples+1):
        folder='Equil%03d' % (i)
        os.chdir(folder)
        if not os.path.isdir('Quench'):
            os.mkdir('Quench')
        os.chdir('Quench')
        for j in range(1,nTrajectories+1):
            trajectoryFolder='%03d-%02d' % (i,j)
            if not os.path.isdir(trajectoryFolder):
                os.mkdir(trajectoryFolder)
            os.chdir(trajectoryFolder)
            writeQuench(nEquil,nCool,T_search,j,cutoff)
            os.chdir('..')
        os.chdir('../Cool/')
        for j in range(1,nTrajectories+1):
            trajectoryFolder='%03d-%02d' % (i,j)
            shutil.copy('restart.cool','../Quench/'+trajectoryFolder)
            shutil.copy('Si.tersoff','../Quench/'+trajectoryFolder)
        os.chdir('../../')
        
